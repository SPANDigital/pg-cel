name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  GO_VERSION: '1.22'

jobs:
  test-linux:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
    
    - name: Install PostgreSQL 16
      run: |
        sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
        wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo tee /etc/apt/trusted.gpg.d/pgdg.asc
        sudo apt-get update
        sudo apt-get install -y postgresql-16 postgresql-server-dev-16 build-essential
        
    - name: Set PostgreSQL environment
      run: |
        echo "PATH=/usr/lib/postgresql/16/bin:$PATH" >> $GITHUB_ENV
        echo "PG_CONFIG=/usr/lib/postgresql/16/bin/pg_config" >> $GITHUB_ENV
        
    - name: Download Go dependencies
      run: go mod download
      
    - name: Build extension
      run: |
        chmod +x build.sh
        ./build.sh
        
    - name: Install extension
      run: |
        # Debug: Show pg_config paths
        pg_config --version
        pg_config --pkglibdir
        pg_config --sharedir
        sudo make install
        # Debug: Check if files were installed
        ls -la $(pg_config --pkglibdir)/ | grep pg_cel || echo "No pg_cel library found"
        ls -la $(pg_config --sharedir)/extension/ | grep pg_cel || echo "No pg_cel extension files found"
        
    - name: Run tests
      run: |
        # Start PostgreSQL with more robust setup
        sudo systemctl start postgresql
        sudo systemctl status postgresql
        
        # Wait for PostgreSQL to be ready
        sudo -u postgres pg_isready || sleep 2
        sudo -u postgres pg_isready || sleep 5
        sudo -u postgres pg_isready
        
        # Create test database
        sudo -u postgres createdb test_db
        
        # Debug: Check if extension files are installed
        echo "=== PostgreSQL Directories ==="
        sudo -u postgres psql -c "SHOW config_file;"
        sudo -u postgres psql -c "SHOW shared_preload_libraries;"
        sudo -u postgres psql -c "SELECT version();"
        
        echo "=== Extension Files ==="
        echo "Library directory:"
        ls -la $(pg_config --pkglibdir)/ | grep pg_cel || echo "No pg_cel library found"
        echo "Extension directory:"  
        ls -la $(pg_config --sharedir)/extension/ | grep pg_cel || echo "No pg_cel extension files found"
        
        # Try to create extension with detailed error reporting
        echo "=== Creating Extension ==="
        sudo -u postgres psql -d test_db -c "CREATE EXTENSION pg_cel;" || {
          echo "Extension creation failed. Checking available extensions:"
          sudo -u postgres psql -d test_db -c "SELECT name FROM pg_available_extensions WHERE name LIKE '%cel%';"
          echo "Checking for any errors in PostgreSQL logs:"
          sudo tail -20 /var/log/postgresql/postgresql-*.log 2>/dev/null || echo "No PostgreSQL logs found"
          exit 1
        }
        
        # Run basic functionality test
        echo "=== Testing Basic Functionality ==="
        sudo -u postgres psql -d test_db -c "SELECT cel_eval('2 + 3');" || exit 1
        
        # Run all tests
        echo "=== Running Full Test Suite ==="
        sudo -u postgres psql -d test_db -f test.sql

  test-macos:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
    
    - name: Install PostgreSQL 16
      run: |
        # Use PostgreSQL 16 for CI testing, we test all versions in the build-and-release workflow
        brew install postgresql@16
        brew link postgresql@16 --force
        
    - name: Set PostgreSQL environment
      run: |
        echo "PATH=/opt/homebrew/opt/postgresql@16/bin:$PATH" >> $GITHUB_ENV
        echo "PG_CONFIG=/opt/homebrew/opt/postgresql@16/bin/pg_config" >> $GITHUB_ENV
        
    - name: Download Go dependencies
      run: go mod download
      
    - name: Build extension
      run: |
        chmod +x build.sh
        ./build.sh
        
    - name: Install extension
      run: |
        # Ensure we're using the correct pg_config
        echo "Using pg_config: $(which pg_config)"
        echo "PostgreSQL version: $(pg_config --version)"
        echo "Library directory: $(pg_config --pkglibdir)"
        echo "Extension directory: $(pg_config --sharedir)/extension"
        make install
        
    - name: Run tests
      run: |
        # Initialize and start PostgreSQL
        initdb -D /tmp/pgdata
        pg_ctl -D /tmp/pgdata -l /tmp/logfile start
        sleep 3
        
        # Wait for PostgreSQL to be ready
        pg_isready || sleep 2
        pg_isready || sleep 5
        pg_isready
        
        # Create test database
        createdb test_db
        
        # Debug: Check if extension files are installed
        echo "=== PostgreSQL Info ==="
        psql -d test_db -c "SELECT version();"
        
        echo "=== Extension Files ==="
        echo "Library directory:"
        ls -la $(pg_config --pkglibdir)/ | grep pg_cel || echo "No pg_cel library found"
        echo "Extension directory:"  
        ls -la $(pg_config --sharedir)/extension/ | grep pg_cel || echo "No pg_cel extension files found"
        
        # Try to create extension with detailed error reporting
        echo "=== Creating Extension ==="
        psql -d test_db -c "CREATE EXTENSION pg_cel;" || {
          echo "Extension creation failed. Checking available extensions:"
          psql -d test_db -c "SELECT name FROM pg_available_extensions WHERE name LIKE '%cel%';"
          echo "Checking for any errors in PostgreSQL logs:"
          tail -20 /tmp/logfile 2>/dev/null || echo "No PostgreSQL logs found"
          exit 1
        }
        
        # Run basic functionality test
        echo "=== Testing Basic Functionality ==="
        psql -d test_db -c "SELECT cel_eval('2 + 3');" || exit 1
        
        # Run all tests
        echo "=== Running Full Test Suite ==="
        psql -d test_db -f test.sql
        
        # Cleanup
        pg_ctl -D /tmp/pgdata stop
